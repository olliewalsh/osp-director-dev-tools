---
- hosts: localhost
  vars_files: vars/default.yaml
  roles:
  - oc_local

  tasks:
  - name: Set directory for cnv yaml files
    set_fact:
      yaml_dir: "{{ working_yamls_dir }}/cnv"

  - name: show yaml output dir
    debug:
      msg: "yamls will be written to {{ yaml_dir }} locally"

  - name: Clean yaml dir
    file:
      state: absent
      path: "{{ yaml_dir }}"

  - name: Create local yamldir
    file:
      path: "{{ yaml_dir }}"
      state: directory
      mode: '0755'

  - name: Render all OpenShift Virtualization Operator templates
    template:
      src:  "cnv/{{ item }}.j2"
      dest: "{{ yaml_dir }}/{{ item }}"
      mode: "0644"
    with_items:
    - namespace.yaml
    - operatorgroup.yaml
    - subscription.yaml
    - deploy_operator.yaml

  - name: Create namespace, operatorgroup and subscription
    shell: |
      set -e
      oc apply -f "{{ yaml_dir }}/{{ item }}"
    with_items:
    - namespace.yaml
    - operatorgroup.yaml
    - subscription.yaml
    environment:
      PATH: "{{ oc_env_path }}"
      KUBECONFIG: "{{ kubeconfig }}"

  - name: wait for OpenShift Virtualization subscription installed
    shell: |
      oc wait pod -n openshift-cnv --for condition=Ready \
          -l name=hyperconverged-cluster-operator \
          --timeout={{ default_timeout }}s
    environment:
      PATH: "{{ oc_env_path }}"
      KUBECONFIG: "{{ kubeconfig }}"
    retries: 100
    delay: 5
    register: result
    until: result.rc == 0

  - name: Install OpenShift Virtualization Operator
    shell: |
      set -e
      sleep 10
      oc apply -f "{{ yaml_dir }}/deploy_operator.yaml"
    environment:
      PATH: "{{ oc_env_path }}"
      KUBECONFIG: "{{ kubeconfig }}"
    retries: 5
    delay: 30
    register: result
    until: result.rc == 0

  - name: wait for OpenShift Virtualization Operator to be installed
    shell: |
      oc wait node -l kubevirt.io/schedulable=true --for condition=Ready \
          --timeout={{ default_timeout }}s
    environment:
      PATH: "{{ oc_env_path }}"
      KUBECONFIG: "{{ kubeconfig }}"
    retries: 100
    delay: 5
    register: result
    until: result.rc == 0

  - name: install kubevirt client
    block:
    - name: get cnv version from {{ cnv_hyperconverged_operator_version }}
      set_fact:
        cnv_version: "{{ cnv_hyperconverged_operator_version | regex_search('(.+\\..+)\\..*', '\\1') | first }}"

    - name: enable cnv-{{ cnv_version }}-for-rhel-{{ ansible_distribution_version|int }}-x86_64-rpms to install kubevirt-virtctl
      become: true
      become_user: root
      command: subscription-manager repos --enable=cnv-{{ cnv_version }}-for-rhel-{{ ansible_distribution_version|int }}-x86_64-rpms

    - name: Install kubevirt-virtctl package
      become: true
      become_user: root
      package:
        name:  kubevirt-virtctl
        state: latest
